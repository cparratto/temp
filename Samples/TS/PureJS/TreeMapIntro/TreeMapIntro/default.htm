<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>TreeMap Introduction</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Styles -->
    <link href="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" rel="stylesheet" />
    <link href="styles/vendor/wijmo.min.css" rel="stylesheet" />
    <link href="styles/app.css" rel="stylesheet" />

    <!-- jQuery/Angular/Bootstrap -->
    <script src="http://code.jquery.com/jquery-2.2.4.min.js" type="text/javascript"></script>
    <script src="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js" type="text/javascript"></script>

    <!-- Wijmo -->
    <script src="scripts/vendor/wijmo.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.input.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.chart.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.chart.hierarchical.min.js" type="text/javascript"></script>
</head>
<body>

    <div class="header">
        <div class="container">
            <img src="resources/wijmo5.png" alt="Wijmo 5" />
            <h1>
                TreeMap 101
            </h1>
            <p>
                This page shows how to get started with Wijmo's TreeMap control.
            </p>
        </div>
    </div>

    <div class="container">

        <!-- Getting Started -->
        <div>
            <h2>Getting Started</h2>
            <p>
                Here are the steps for getting started with the TreeMap control in JavaScript applications:
            </p>
            <ol>
                <li>Add references to Wijmo.</li>
                <li>Add markup to serve as the Wijmo control's host.</li>
                <li>Initialize the Wijmo control(s) via JavaScript.</li>
                <li>(Optional) Add some CSS to customize the control's appearance.</li>
            </ol>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#sHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#sJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active pane-content" id="sHtml">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;link rel="stylesheet" type="text/css" href="css/bootstrap.css"/&gt;
    &lt;link rel="stylesheet" type="text/css" href="css/wijmo.css" /&gt;
    &lt;link href="css/app.css" rel="stylesheet" type="text/css" /&gt;
    &lt;script src="scripts/wijmo.js" type="text/javascript"&gt;&lt;/script&gt;
    &lt;script src="scripts/wijmo.input.js" type="text/javascript"&gt;&lt;/script&gt;
    &lt;script src="scripts/wijmo.chart.js" type="text/javascript"&gt;&lt;/script&gt;
    &lt;script src="scripts/wijmo.chart.hierarchical.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;!-- TreeMap --&gt;
    &lt;div id="introChart"&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
                            </div>
                            <div class="tab-pane pane-content" id="sJs">
// create controls
var chart = new wijmo.chart.hierarchical.TreeMap('#introChart');

var categories = ['Beverages', 'Condiments', 'Confections', 'Dairy Products', 'Grains/Cereals', 'Meat/Poultry', 'Produce', 'Seafood'],
    subCategories = [['Soft drinks', 'Coffees', 'Teas', 'Beers', 'Ales'], ['Sweet and Savory sauces', 'Relishes', 'Spreads', 'Seasonings'],
        ['Desserts', 'Candies', 'Sweet breads'], ['Chesses'], ['Breads', 'Crackers', 'Pasta', 'Cereal'], ['Prepared meats'], ['Dried fruit', 'Bean curd'], ['Seaweed', 'Fish']],
    rand = function () {
        return Math.round(Math.random() * 100)
    },
    getData = function() {
        var self = this,
            data = [];

        categories.forEach(function(c, idx) {
            var sub = self.subCategories[idx];
            sub.forEach(function(s) {
                data.push({
                    category: c,
                    subCategory: s,
                    sales: self.rand()
                });
            });
        });
        return data;
    };

// initialize TreeMap's properties
chart.beginUpdate();
chart.binding = 'sales';
chart.bindingName = ['category', 'subCategory'];
chart.itemsSource = getData();
chart.dataLabel.position = wijmo.chart.LabelPosition.Center;
chart.dataLabel.content = '{name}';
chart.endUpdate();
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="introChart"></div>
                </div>
            </div>
        </div>

        <!-- Group CollectionView -->
        <div>
            <h2>Group Collection</h2>
            <p>
                The sample shows how to use the TreeMap chart with Grouped CollectionView.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#gcHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#gcJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active pane-content" id="gcHtml">
&lt;div id="groupCVChart"&gt;&lt;/div&gt;
                            </div>
                            <div class="tab-pane pane-content" id="gcJs">
// create controls
var chart = new wijmo.chart.hierarchical.TreeMap('#groupCVChart');

var categories = ['Beverages', 'Condiments', 'Confections', 'Dairy Products', 'Grains/Cereals', 'Meat/Poultry', 'Produce', 'Seafood'],
    subCategories = [['Soft drinks', 'Coffees', 'Teas', 'Beers', 'Ales'], ['Sweet and Savory sauces', 'Relishes', 'Spreads', 'Seasonings'],
        ['Desserts', 'Candies', 'Sweet breads'], ['Chesses'], ['Breads', 'Crackers', 'Pasta', 'Cereal'], ['Prepared meats'], ['Dried fruit', 'Bean curd'], ['Seaweed', 'Fish']],
    rand = function () {
        return Math.round(Math.random() * 100)
    },
    getGroupCVData = function() {
        var data = [],
            len = 1000,
            catLen = categories.length,
            subCat, randomC, randomSC;

        for (var i = 0; i < len; i++) {
            randomC = Math.floor(Math.random() * catLen);
            subCat = subCategories[randomC];
            randomSC = Math.floor(Math.random() * subCat.length);

            data.push({
                category: categories[randomC],
                subCategory: subCat[randomSC],
                sales: rand()
            });
        }
        var cv = new wijmo.collections.CollectionView(data);

        
        cv.groupDescriptions.push(new wijmo.collections.PropertyGroupDescription('category'));
        cv.groupDescriptions.push(new wijmo.collections.PropertyGroupDescription('subCategory'));
        return cv;
    };

// initialize TreeMap's properties
chart.beginUpdate();
chart.binding = 'sales';
chart.bindingName = ['category', 'subCategory'];
chart.itemsSource = getGroupCVData();
chart.dataLabel.position = wijmo.chart.PieLabelPosition.Center;
chart.dataLabel.content = '{name}';
chart.endUpdate();
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="groupCVChart"></div>
                </div>
            </div>
        </div>
        <!-- Type -->
        <div>
            <h2>Type</h2>
            <p>
                The TreeMap chart control allow you to set <b>type</b> property to customize its layout and appearance:
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#typeHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#typeJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active pane-content" id="typeHtml">
&lt;div id="typeChart"&gt;&lt;/div&gt;
&lt;div class="form-horizontal"&gt;
    &lt;div class="form-group"&gt;
        &lt;div class="col-md-12"&gt;
            &lt;select id="typeMenu"&gt;
                &lt;option value="0" selected="selected"&gt;Squarified&lt;/option&gt;
                &lt;option value="1"&gt;Horizontal&lt;/option&gt;
                &lt;option value="2"&gt;Vertical&lt;/option&gt;
            &lt;/select&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
                            </div>
                            <div class="tab-pane pane-content" id="typeJs">
// create TreeMap and Menus
var chart = new wijmo.chart.hierarchical.TreeMap('#typeChart'),
    typeMenu = new wijmo.input.Menu('#typeMenu');

// initialize TreeMap's properties
chart.beginUpdate();
chart.binding = 'sales';
chart.bindingName = ['category', 'subCategory'];
chart.itemsSource = app.getData();
chart.dataLabel.position = wijmo.chart.LabelPosition.Center;
chart.dataLabel.content = '{name}';
chart.endUpdate();

// update the menus' headers
typeMenu.selectedIndexChanged.addHandler(function () {
    if (typeMenu.selectedValue) {
        // update TreeMap's type
        chart.type = parseInt(typeMenu.selectedValue);

        // update menu header
        updateMenuHeader(typeMenu, 'Type');
    }
});
updateMenuHeader(typeMenu, 'Type');

// helper function for Menu headers
function updateMenuHeader(menu, prefix) {
    menu.header = '<b>' + prefix + '</b>: ' + menu.text;
}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="typeChart"></div>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-12">
                                <select id="typeMenu">
                                    <option value="0" selected="selected">Squarified</option>
                                    <option value="1">Horizontal</option>
                                    <option value="2">Vertical</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Max Depth -->
        <div>
            <h2>Max Depth</h2>
            <p>
                The TreeMap chart control allow you to set <b>maxDepth</b> property to set the maximum number of node levels to show in the current view.
                Levels will be flattened into the current plane.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#mdHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#mdJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active pane-content" id="mdHtml">
&lt;div id="maxDepthChart"&gt;&lt;/div&gt;
&lt;div class="form-horizontal"&gt;
    &lt;div class="form-group"&gt;
        &lt;label class="col-md-3 control-label"&gt;Max Depth&lt;/label&gt;
        &lt;div class="col-md-9"&gt;
            &lt;input id="maxDepth" type="text" /&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
                            </div>
                            <div class="tab-pane pane-content" id="mdJs">
// create controls
var chart = new wijmo.chart.hierarchical.TreeMap('#maxDepthChart'),
    maxDepth = new wijmo.input.InputNumber('#maxDepth');

// initialize TreeMap's properties
chart.beginUpdate();
chart.maxDepth = 2;
chart.binding = 'sales';
chart.bindingName = 'type';
chart.childItemsPath = 'items';
chart.itemsSource = app.getMaxDepthData();
chart.dataLabel.position = wijmo.chart.LabelPosition.Center;
chart.dataLabel.content = '{name}';
chart.endUpdate();

// maxDepth - initialize InputNumber's properties
maxDepth.min = 0;
maxDepth.max = 4;
maxDepth.step = 1;
maxDepth.format = 'n';
maxDepth.valueChanged.addHandler(function (sender) {
    if (sender.value < sender.min || sender.value > sender.max) {
        return;
    }
    chart.maxDepth = sender.value;
});
maxDepth.value = 2;
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="maxDepthChart"></div>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-md-3 control-label">Max Depth</label>
                            <div class="col-md-9">
                                <input id="maxDepth" type="text" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- theming -->
        <div>
            <h2>Theming</h2>
            <p>
                The TreeMap chart control allow you to set <b>palette</b> property to customize the appearance.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#themeHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#themeJs" role="tab" data-toggle="tab">JS</a></li>
                            <li><a href="#themeCss" role="tab" data-toggle="tab">CSS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane pane-content active" id="themeHtml">
&lt;div id="themeChart1" class="custom-treemap"&gt;&lt;/div&gt;
&lt;div id="themeChart2" class="custom-treemap"&gt;&lt;/div&gt;
                            </div>
                            <div class="tab-pane pane-content" id="themeJs">
// create controls
var chart1 = new wijmo.chart.hierarchical.TreeMap('#themeChart1');
var chart2 = new wijmo.chart.hierarchical.TreeMap('#themeChart2');

// initialize TreeMap's properties
chart1.beginUpdate();
chart1.binding = 'sales';
chart1.bindingName = ['category', 'subCategory'];
chart1.itemsSource = app.getData();
chart1.dataLabel.position = wijmo.chart.LabelPosition.Center;
chart1.dataLabel.content = '{name}';
chart1.palette = [{
    titleColor: '#00277d',
    maxColor: 'rgba(0,39,125,0.7)',
    minColor: 'rgba(168,187,230,0.7)'
}, {
    titleColor: '#7d1f00',
    maxColor: 'rgba(125,21,0,0.7)',
    minColor: 'rgba(230,183,168,0.7)'
}, {
    titleColor: '#007d27',
    maxColor: 'rgba(0,125,39,0.7)',
    minColor: 'rgba(168,230,188,0.7)'
}, {
    titleColor: '#7d003c',
    maxColor: 'rgba(125,0,60,0.7)',
    minColor: 'rgba(230,168,198,0.7)'
}, {
    titleColor: '#7d4300',
    maxColor: 'rgba(125,67,0,0.7)',
    minColor: 'rgba(230,201,168,0.7)'
}, {
    titleColor: '#51007d',
    maxColor: 'rgba(81,0,125,0.7)',
    minColor: 'rgba(209,170,230,0.7)'
}, {
    titleColor: '#7d7400',
    maxColor: 'rgba(125,116,0,0.7)',
    minColor: 'rgba(230,226,168,0.7)'
}, {
    titleColor: '#970000',
    maxColor: 'rgba(151,0,0,0.7)',
    minColor: 'rgba(230,169,169,0.7)'
}];
chart1.endUpdate();

chart2.beginUpdate();
chart2.binding = 'sales';
chart2.bindingName = ['category', 'subCategory'];
chart2.itemsSource = app.getData();
chart2.dataLabel.position = wijmo.chart.LabelPosition.Center;
chart2.dataLabel.content = '{name}';
chart2.palette = ['#88bde6', '#fbb258', '#90cd97', '#f6aac9', '#bfa554', '#bc99c7', '#eddd46', '#f07e6e', '#8c8c8c'];
chart2.endUpdate();
                            </div>
                            <div class="tab-pane pane-content" id="themeCss">
.custom-treemap .wj-data-label {
    fill: #000;
}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="themeChart1" class="custom-treemap"></div>
                    <div id="themeChart2" class="custom-treemap"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- sample scripts -->
    <script src="scripts/app.js"></script>
    <script src="scripts/gettingStarted.js"></script>
    <script src="scripts/type.js"></script>
    <script src="scripts/maxDepth.js"></script>
    <script src="scripts/groupCV.js"></script>
    <script src="scripts/theme.js"></script>

    <!-- Google analytics -->
    
    <script src="http://cdn.wijmo.com/wijmo.sample.toolbar.js" type="text/javascript"></script>
</body>
</html>