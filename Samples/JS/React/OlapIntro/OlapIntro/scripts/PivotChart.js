var PivotChart = React.createClass({
    // initialize chart properties
    getInitialState: function () {
        return {
            chartType: 'Column',
            showLegend: 'Auto',
            showTitle: true
        };
    },
    // store reference to pivot chart control
    initChart: function (s, e) {
        this.setState({ theChart: s });
    },
    // change the chart properties
    chartTypeChanged: function (s, e) {
        this.setState({ chartType: s.text });
    },
    showLegendChanged: function (s, e) {
        this.setState({ showLegend: s.text });
    },
    showTitleChanged: function (e) {
        this.setState({ showTitle: e.target.checked });
    },
    render: function () {
        return React.createElement("div", null,
            React.createElement("h4", null, "Show the results in a PivotChart"),
            React.createElement("p", null,
                "The ",
                React.createElement("b", null, "PivotChart"),
                " control provides a graphical visualization of the results. It is similar to Excel's pivot charts, including support for multiple chart types and hierarchical axes."),
            React.createElement("p", null,
                "To use the ",
                React.createElement("b", null, "PivotChart"),
                " control, connect it to a ",
                React.createElement("b", null, "PivotPanel"),
                " using the ",
                React.createElement("b", null, "itemsSource"),
                " property:"),
            React.createElement("div", { style: { display: this.props.engine.isViewDefined ? 'none' : '' } },
                React.createElement("p", null, "Please create a view in order to see the chart.")),
            React.createElement("div", { style: { display: this.props.engine.isViewDefined ? '' : 'none' } },
                React.createElement("dl", { className: "dl-horizontal" },
                    React.createElement("dt", null, "Chart Type"),
                    React.createElement("dd", null,
                        React.createElement(Wj.ComboBox, { itemsSource: 'Column,Bar,Scatter,Line,Area,Pie'.split(','), text: this.state.chartType, textChanged: this.chartTypeChanged })),
                    React.createElement("dt", null, "Show Legend"),
                    React.createElement("dd", null,
                        React.createElement(Wj.ComboBox, { itemsSource: 'Always,Never,Auto'.split(','), text: this.state.showLegend, textChanged: this.showLegendChanged })),
                    React.createElement("dt", null, "Show Title"),
                    React.createElement("dd", null,
                        React.createElement("input", { type: "checkbox", checked: this.state.showTitle, onChange: this.showTitleChanged }))),
                React.createElement(Wj.PivotChart, { chartType: this.state.chartType, showTitle: this.state.showTitle, showLegend: this.state.showLegend, itemsSource: this.props.engine, initialized: this.initChart })),
            React.createElement("div", { className: "source-card mdl-card mdl-shadow--2dp" },
                React.createElement("div", { className: "mdl-tabs mdl-js-tabs mdl-js-ripple-effect" },
                    React.createElement("div", { className: "mdl-tabs__tab-bar" },
                        React.createElement("a", { href: "#html-chart", className: "mdl-tabs__tab" }, "JSX"),
                        React.createElement("a", { href: "#js-chart", className: "mdl-tabs__tab" }, "JS"),
                        React.createElement("a", { href: "#close-chart", className: "mdl-tabs__tab is-active" }, "X")),
                    React.createElement("div", { className: "mdl-tabs__panel", id: "html-chart" },
                        React.createElement("code", { className: "pane-content" },
                            '<div style={{ display: this.props.engine.isViewDefined ? \'none\' : \'\' }}>\n',
                            '    <p>\n',
                            '        Please create a view in order to see the chart.</p>\n',
                            '</div>\n',
                            '<div style={{ display: this.props.engine.isViewDefined ? \'\' : \'none\' }}>\n',
                            '    <dl className="dl-horizontal">\n',
                            '        <dt>Chart Type</dt>\n',
                            '        <dd>\n',
                            '            <Wj.ComboBox\n',
                            '                itemsSource={ \'Column,Bar,Scatter,Line,Area,Pie\'.split(\',\') }\n',
                            '                text={ this.state.chartType }\n',
                            '                textChanged={ this.chartTypeChanged }>\n',
                            '            </Wj.ComboBox>\n',
                            '        </dd>\n',
                            '        <dt>Show Legend</dt>\n',
                            '        <dd>\n',
                            '            <Wj.ComboBox\n',
                            '                itemsSource={ \'Always,Never,Auto\'.split(\',\') }\n',
                            '                text={ this.state.showLegend }\n',
                            '                textChanged={ this.showLegendChanged }>\n',
                            '            </Wj.ComboBox>\n',
                            '        </dd>\n',
                            '        <dt>Show Title</dt>\n',
                            '        <dd>\n',
                            '            <input type="checkbox"\n',
                            '                checked={ this.state.showTitle }\n',
                            '                onChange={ this.showTitleChanged } />\n',
                            '        </dd>\n',
                            '    </dl>\n',
                            '    <Wj.PivotChart\n',
                            '        chartType={ this.state.chartType }\n',
                            '        showTitle={ this.state.showTitle }\n',
                            '        showLegend={ this.state.showLegend }\n',
                            '        itemsSource={ this.props.engine }\n',
                            '        initialized={ this.initChart }>\n',
                            '    </Wj.PivotChart>\n',
                            '</div>')),
                    React.createElement("div", { className: "mdl-tabs__panel", id: "js-chart" },
                        React.createElement("code", { className: "pane-content" },
                            '// store reference to pivot chart control\n',
                            'initChart: function (s, e) {\n',
                            '    this.setState({ theChart: s });\n',
                            '},\n',
                            '\n',
                            '// change the chart properties\n',
                            'chartTypeChanged: function (s, e) {\n',
                            '    this.state.theChart.chartType = s.text;\n',
                            '}',
                            'showLegendChanged: function (s, e) {\n',
                            '    this.state.theChart.showLegend = s.text;\n',
                            '},\n',
                            'showTitleChanged: function (e) {\n',
                            '    this.state.theChart.showTitle = e.target.checked;\n',
                            '},\n',
                            'getShowTitle() {\n',
                            '    return this.state.theChart ? this.state.theChart.showTitle : true;\n',
                            '},\n')),
                    React.createElement("div", { className: "mdl-tabs__panel", id: "close-chart" }))));
    }
});
//# sourceMappingURL=PivotChart.js.map